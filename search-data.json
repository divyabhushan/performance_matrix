[{"title":"Hello","type":0,"sectionRef":"#","url":"blog/hello-world","content":"Welcome to this blog. This blog is created with Docusaurus 2 alpha.This is a test post.A whole bunch of other information."},{"title":"Hola","type":0,"sectionRef":"#","url":"blog/hola","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"},{"title":"Welcome","type":0,"sectionRef":"#","url":"blog/welcome","content":"Blog features are powered by the blog plugin. Simply add files to the blog directory. It supports tags as well!Delete the whole directory if you don't want the blog features. As simple as that!"},{"title":"Performance Matrix Basics","type":0,"sectionRef":"#","url":"docs/","content":""},{"title":"Powered by MDX","type":0,"sectionRef":"#","url":"docs/mdx","content":"You can write JSX and use React components within your Markdown thanks to MDX.Docusaurus green and Facebook blue are my favorite colors.I can write Markdown alongside my JSX!"},{"title":"ABS","type":0,"sectionRef":"#","url":"docs/references/formulas/abs","content":""},{"title":"Syntax","type":1,"pageTitle":"ABS","url":"docs/references/formulas/abs#syntax","content":"ABS (value)Copy "},{"title":"Arguments","type":1,"pageTitle":"ABS","url":"docs/references/formulas/abs#arguments","content":"value – The node or number of which you want the absolute of.  "},{"title":"Example","type":1,"pageTitle":"ABS","url":"docs/references/formulas/abs#example","content":"Consider a scenario where you want to calculate the absolute difference between demand and inventory. The values for demand, inventory and the absolute difference are shown in the table below.   Parameter Week 1 Week 2 Week 3 Week 4 Demand 110 95 75 78 Inventory 85 70 100 80 Absolute Difference 25 25 25 2  Absolute difference is calculated as  ABS (Demand - Inventory)Copy "},{"title":"Excel Equivalent","type":1,"pageTitle":"ABS","url":"docs/references/formulas/abs#excel-equivalent","content":"ABS "},{"title":"DSSERIES","type":0,"sectionRef":"#","url":"docs/references/formulas/additional_series","content":""},{"title":"Syntax","type":1,"pageTitle":"DSSERIES","url":"docs/references/formulas/additional_series#syntax","content":"DSSERIES[seriesid] - will reperesnt the respective sereis data "},{"title":"Example","type":1,"pageTitle":"DSSERIES","url":"docs/references/formulas/additional_series#example","content":"Conisider there is data in following structure   Parameter Series 1 Series 2 Series 3 Series 4 US 110 95 75 78 India 85 70 100 80 Germany 25 25 0 0  Here you can acces the Series 3 value of India using following formula SUM(DSSERIES3.India)Copy "},{"title":"AND","type":0,"sectionRef":"#","url":"docs/references/formulas/and","content":""},{"title":"Syntax","type":1,"pageTitle":"AND","url":"docs/references/formulas/and#syntax","content":"AND ( logical_test1, [logical_test2], ... )Copy "},{"title":"Arguments","type":1,"pageTitle":"AND","url":"docs/references/formulas/and#arguments","content":"logical_test1 – The first condition to be evaluated. This is a required argument. logical_test2, … – The additional conditions to be evaluated. These are optional arguments. "},{"title":"Return value","type":1,"pageTitle":"AND","url":"docs/references/formulas/and#return-value","content":"Either True or False. "},{"title":"Remarks","type":1,"pageTitle":"AND","url":"docs/references/formulas/and#remarks","content":"The AND function accepts multiple conditions. "},{"title":"Example","type":1,"pageTitle":"AND","url":"docs/references/formulas/and#example","content":"Consider a scenario in which if the number of licenses is greater than 500 and usage period is greater than 24 months, then the price should be $20 else $25. To achieve this, the formula should be IF(AND(Num_of_Licenses>500,Duration<24),20,25)Copy "},{"title":"Excel Equivalent","type":1,"pageTitle":"AND","url":"docs/references/formulas/and#excel-equivalent","content":"AND "},{"title":"AVERAGE","type":0,"sectionRef":"#","url":"docs/references/formulas/average","content":""},{"title":"Syntax","type":1,"pageTitle":"AVERAGE","url":"docs/references/formulas/average#syntax","content":"AVERAGE (value1,[value2]....)Copy "},{"title":"Arguments","type":1,"pageTitle":"AVERAGE","url":"docs/references/formulas/average#arguments","content":"value1 – The first node or number to be averaged. This is a required argument. value2, … – The additional nodes or numbers to be averaged. These are optional arguments. "},{"title":"Example","type":1,"pageTitle":"AVERAGE","url":"docs/references/formulas/average#example","content":"Consider sales of a particular product across different regions East, South, Central and West to be as follows. The average sales is to be calculated.  Region Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec East 100 100 125 150 100 100 120 125 0 0 0 0 South 0 0 150 200 200 175 175 150 150 125 125 175 Central 100 100 125 150 100 0 0 0 150 200 200 175 West 0 0 150 125 125 175 200 175 175 125 0 0 Average Sales 50 50 137.5 156.25 131.25 112.5 123.75 112.5 118.75 112.5 81.25 87.5  The average sales should be defined as  AVERAGE (East, South, Central, West).Copy "},{"title":"Excel Equivalent","type":1,"pageTitle":"AVERAGE","url":"docs/references/formulas/average#excel-equivalent","content":"AVERAGE "},{"title":"AVERAGEEXNEG","type":0,"sectionRef":"#","url":"docs/references/formulas/averageexneg","content":""},{"title":"Syntax","type":1,"pageTitle":"AVERAGEEXNEG","url":"docs/references/formulas/averageexneg#syntax","content":"AVERAGEEXNEG (value1,[value2]....)Copy "},{"title":"Arguments","type":1,"pageTitle":"AVERAGEEXNEG","url":"docs/references/formulas/averageexneg#arguments","content":"value1 – The first node or number to be averaged. This is a required argument. value2, … – The additional nodes or numbers to be averaged. These are optional arguments. "},{"title":"Excel Equivalent","type":1,"pageTitle":"AVERAGEEXNEG","url":"docs/references/formulas/averageexneg#excel-equivalent","content":"AVERAGE "},{"title":"AVERAGEEXZERO","type":0,"sectionRef":"#","url":"docs/references/formulas/averageexzero","content":""},{"title":"Syntax","type":1,"pageTitle":"AVERAGEEXZERO","url":"docs/references/formulas/averageexzero#syntax","content":"AVERAGEEXZERO (value1,[value2]....)Copy "},{"title":"Arguments","type":1,"pageTitle":"AVERAGEEXZERO","url":"docs/references/formulas/averageexzero#arguments","content":"value1 – The first node or number to be averaged. This is a required argument. value2, … – The additional nodes or numbers to be averaged. These are optional arguments. "},{"title":"Example","type":1,"pageTitle":"AVERAGEEXZERO","url":"docs/references/formulas/averageexzero#example","content":"Consider sales of a particular product across different regions East, South, Central and West to be as follows. Assume if sales for a particular period is zero, the product was withdrawn from the market and hence that region need not be considered when calculating average sales. The average sales is also shown in the table.   Region Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec East 100 100 125 150 100 100 120 125 0 0 0 0 South 0 0 150 200 200 175 175 150 150 125 125 175 Central 100 100 125 150 100 0 0 0 150 200 200 175 West 0 0 150 125 125 175 200 175 175 125 0 0 Average Sales 100 100 137.5 156.25 131.25 150 165 150 156.33 150 162.5 175  The average sales should be defined as  AVERAGEEXZERO (East, South, Central, West).Copy "},{"title":"Excel Equivalent","type":1,"pageTitle":"AVERAGEEXZERO","url":"docs/references/formulas/averageexzero#excel-equivalent","content":"AVERAGE "},{"title":"AVERAGEEXZERONEG","type":0,"sectionRef":"#","url":"docs/references/formulas/averageexzeroneg","content":""},{"title":"Syntax","type":1,"pageTitle":"AVERAGEEXZERONEG","url":"docs/references/formulas/averageexzeroneg#syntax","content":"AVERAGEEXZERONEG (value1,[value2]....)Copy "},{"title":"Arguments","type":1,"pageTitle":"AVERAGEEXZERONEG","url":"docs/references/formulas/averageexzeroneg#arguments","content":"value1 – The first node or number to be averaged. This is a required argument. value2, … – The additional nodes or numbers to be averaged. These are optional arguments. "},{"title":"Excel Equivalent","type":1,"pageTitle":"AVERAGEEXZERONEG","url":"docs/references/formulas/averageexzeroneg#excel-equivalent","content":"AVERAGE "},{"title":"COUNT","type":0,"sectionRef":"#","url":"docs/references/formulas/count","content":""},{"title":"Syntax","type":1,"pageTitle":"COUNT","url":"docs/references/formulas/count#syntax","content":"COUNT (value1,[value2]....)Copy "},{"title":"Arguments","type":1,"pageTitle":"COUNT","url":"docs/references/formulas/count#arguments","content":"value1 – The first node or number to be counted. This is a required argument. value2, … – The additional nodes or numbers to be counted. These are optional arguments. "},{"title":"Example","type":1,"pageTitle":"COUNT","url":"docs/references/formulas/count#example","content":"Consider a scenario where you want to calculate the number of periods in which simulations are performed. That is if simulation period is between July and September, the result should be 3. Count is calculated as  COUNT (NODE_ID.SIM_PERIODS).Copy "},{"title":"Excel Equivalent","type":1,"pageTitle":"COUNT","url":"docs/references/formulas/count#excel-equivalent","content":"COUNT "},{"title":"CUMIPMT","type":0,"sectionRef":"#","url":"docs/references/formulas/cumipmt","content":""},{"title":"Syntax","type":1,"pageTitle":"CUMIPMT","url":"docs/references/formulas/cumipmt#syntax","content":"CUMIPMT (Rate, Nper, PV, start_period, end_period, Type)Copy "},{"title":"Arguments","type":1,"pageTitle":"CUMIPMT","url":"docs/references/formulas/cumipmt#arguments","content":"Rate – The interest rate per period.  Nper – The total number of periods. PV – The present value of the loan.  start_period – The first payment period.  end_period – The last payment period. Type – Indicates when the payments are made. Type is zero if payments are made at the end of the period and non-zero if payments are made at the start of the period.  "},{"title":"Example","type":1,"pageTitle":"CUMIPMT","url":"docs/references/formulas/cumipmt#example","content":"Consider a $10,000 loan at an annual rate of 10% that is to be paid off in 3 years. All payments are made at the beginning of the month. To calculate the interest payment for a specified range of periods, say between period 12 and 18, the formula should be CUMIPMT (Rate/12, Number of Years*12, Loan Amount, 12, 18, 0)Copy The cumulative interest payments between 12th and 18th months is calculated to be $376.67. "},{"title":"Excel Equivalent","type":1,"pageTitle":"CUMIPMT","url":"docs/references/formulas/cumipmt#excel-equivalent","content":"CUMIPMT "},{"title":"CUMPRINC","type":0,"sectionRef":"#","url":"docs/references/formulas/cumprinc","content":""},{"title":"Syntax","type":1,"pageTitle":"CUMPRINC","url":"docs/references/formulas/cumprinc#syntax","content":"CUMPRINC (Rate, Nper, PV, start_period, end_period, Type)Copy "},{"title":"Arguments","type":1,"pageTitle":"CUMPRINC","url":"docs/references/formulas/cumprinc#arguments","content":"Rate – The interest rate per period.  Nper – The total number of periods. PV – The present value of the loan.  start_period – The first payment period.  end_period – The last payment period. Type – Indicates when the payments are made. Type is zero if payments are made at the end of the period and non-zero if payments are made at the start of the period.  "},{"title":"Example","type":1,"pageTitle":"CUMPRINC","url":"docs/references/formulas/cumprinc#example","content":"Consider a $10,000 loan at an annual rate of 10% that is to be paid off in 3 years. All payments are made at the beginning of the month. To calculate the principal payment for a specified range of periods, say between period 12 and 18, the formula should be CUMPRINC (Rate/12, Number of Years*12, Loan Amount, 12, 18, 0)Copy The cumulative principal payments between 12th and 18th months is calculated to be $1882.04 "},{"title":"Excel Equivalent","type":1,"pageTitle":"CUMPRINC","url":"docs/references/formulas/cumprinc#excel-equivalent","content":"CUMPRINC "},{"title":"CURRENT_NODE_VALUE","type":0,"sectionRef":"#","url":"docs/references/formulas/current_node_value","content":""},{"title":"Syntax","type":1,"pageTitle":"CURRENT_NODE_VALUE","url":"docs/references/formulas/current_node_value#syntax","content":"CURRENT_NODE_VALUES.get(index) "},{"title":"Arguments","type":1,"pageTitle":"CURRENT_NODE_VALUE","url":"docs/references/formulas/current_node_value#arguments","content":"index - a reference to the period index commonly achieved by CURRENT_PERIOD_INDEX  "},{"title":"Example","type":1,"pageTitle":"CURRENT_NODE_VALUE","url":"docs/references/formulas/current_node_value#example","content":"Consider a scenario where you want to assign 100 as the first month value and you want the subsequent periods to have a month-on-month growth of 10% This can be achieved by using the formula IF ( CURRENT_PERIOD_INDEX == 1, 1000, CURRENT_NODE_VALUES.GET(CURRENT_PERIOD_INDEX-1) * 1.1) "},{"title":"CURRENT_PERIOD_INDEX","type":0,"sectionRef":"#","url":"docs/references/formulas/current_period_index","content":""},{"title":"Syntax","type":1,"pageTitle":"CURRENT_PERIOD_INDEX","url":"docs/references/formulas/current_period_index#syntax","content":"CURRENT_PERIOD_INDEX < 5 ? value1 : value2;Copy CURRENT_PERIOD_INDEX points to the current period of the node for which vaule is getting calculatd. "},{"title":"Example","type":1,"pageTitle":"CURRENT_PERIOD_INDEX","url":"docs/references/formulas/current_period_index#example","content":"Assume we have modelled a profit and loss statement using ValQ and we want to show the YoY growth in profits. This can be achieved by the following formula (THIS.GET(CURRENT_PERIOD_INDEX)/THIS.GET(CURRENT_PERIOD_INDEX-1))\\*100Copy Let’s consider another example. To assign values to a node based on the period index, say for the 1st period the value is N12, 2nd period N13, 3rd period N1*4, the formula will be SWITCH(CURRENT_PERIOD_INDEX, 1, N1 * 2, 2, N1 * 3, 3, N1N1\\ * 4);Copy "},{"title":"CURRENT_SERIES","type":0,"sectionRef":"#","url":"docs/references/formulas/current_series","content":""},{"title":"Syntax","type":1,"pageTitle":"CURRENT_SERIES","url":"docs/references/formulas/current_series#syntax","content":"CURRENT_SERIES == 'series'? value1:value2Copy "},{"title":"Arguments","type":1,"pageTitle":"CURRENT_SERIES","url":"docs/references/formulas/current_series#arguments","content":"series - Refers to the series ie, act, base or tgt.  value1 – The value that should be assigned to the series mentioned in the argument list. If series is mentioned as base, value1 is assigned as baseline series. value2 – The value that should be assigned to the series other than the one mentioned in the argument list. If series is mentioned as base, value1 is assigned as comparison series. "},{"title":"Example","type":1,"pageTitle":"CURRENT_SERIES","url":"docs/references/formulas/current_series#example","content":"Consider a scenario where you want to assign 100 as the monthly baseline value and 85 as the monthly comparison value. This can be achieved by using the formula  CURRENT_SERIES == 'base'? 100:85Copy "},{"title":"CURRENT_SERIES_ID","type":0,"sectionRef":"#","url":"docs/references/formulas/current_series_id","content":""},{"title":"Syntax","type":1,"pageTitle":"CURRENT_SERIES_ID","url":"docs/references/formulas/current_series_id#syntax","content":"CURRENT_SERIES_ID == 'series'? value1:value2Copy "},{"title":"Arguments","type":1,"pageTitle":"CURRENT_SERIES_ID","url":"docs/references/formulas/current_series_id#arguments","content":"series - Refers to the series label ie, Forecast, Budget etc. value1 – The value that should be assigned to the series mentioned in the argument list. If series is mentioned as Forecast, value1 is assigned as the series Forecast. value2 – The value that should be assigned to the series other than the one mentioned in the argument list. If series is mentioned as Forecast, value1 is assigned as the series Comparison. "},{"title":"Example","type":1,"pageTitle":"CURRENT_SERIES_ID","url":"docs/references/formulas/current_series_id#example","content":"Consider a scenario where you want to assign 100 as the monthly Forecast value and 85 as the monthly Budget value. This can be achieved by using the formula  CURRENT_SERIES_ID == 'Forecast'? 100:85.Copy "},{"title":"EXP","type":0,"sectionRef":"#","url":"docs/references/formulas/exp","content":""},{"title":"Syntax","type":1,"pageTitle":"EXP","url":"docs/references/formulas/exp#syntax","content":"EXP (value)Copy "},{"title":"Arguments","type":1,"pageTitle":"EXP","url":"docs/references/formulas/exp#arguments","content":"value – The exponent applied to the base e. "},{"title":"Example","type":1,"pageTitle":"EXP","url":"docs/references/formulas/exp#example","content":"If value = 2 EXP(value) returns 7.39. "},{"title":"Excel Equivalent","type":1,"pageTitle":"EXP","url":"docs/references/formulas/exp#excel-equivalent","content":"EXP "},{"title":"findByID","type":0,"sectionRef":"#","url":"docs/references/formulas/findbyid","content":""},{"title":"Syntax","type":1,"pageTitle":"findByID","url":"docs/references/formulas/findbyid#syntax","content":"findByID(\"ID match string\") "},{"title":"Arguments","type":1,"pageTitle":"findByID","url":"docs/references/formulas/findbyid#arguments","content":"ID match string - ID to match the node "},{"title":"Example","type":1,"pageTitle":"findByID","url":"docs/references/formulas/findbyid#example","content":"Consider a scenario where you want to add all the nodes with Sales in their node ID. If the nodes start with Sales, sum can be achieved by using the formula SUM(THIS.DESCENDANTS.findByID(\"^NSales\"))  If the nodes end with Sales, sum can be achieved by using the formula SUM(THIS.DESCENDANTS.findByID(\"NSales$\"))  "},{"title":"findByTitle","type":0,"sectionRef":"#","url":"docs/references/formulas/findbytitle","content":""},{"title":"Syntax","type":1,"pageTitle":"findByTitle","url":"docs/references/formulas/findbytitle#syntax","content":"findByID(\"Title match string\") "},{"title":"Arguments","type":1,"pageTitle":"findByTitle","url":"docs/references/formulas/findbytitle#arguments","content":"Title match string - Title to match the node "},{"title":"Example","type":1,"pageTitle":"findByTitle","url":"docs/references/formulas/findbytitle#example","content":"Consider a scenario where you want to add all the nodes with Sales in their node title. If the nodes start with Sales, sum can be achieved by using the formula SUM(THIS.DESCENDANTS.findByTitle(\"^NSales\"))  If the nodes end with Sales, sum can be achieved by using the formula SUM(THIS.DESCENDANTS.findByTitle(\"NSales$\"))  "},{"title":"FOREACH","type":0,"sectionRef":"#","url":"docs/references/formulas/foreach","content":""},{"title":"Syntax","type":1,"pageTitle":"FOREACH","url":"docs/references/formulas/foreach#syntax","content":"ForEach (Array,Iterator)Copy "},{"title":"Arguments","type":1,"pageTitle":"FOREACH","url":"docs/references/formulas/foreach#arguments","content":"Array – The node for which the iterator statement is executed for all the periods. Iterator – The statement that is to be executed. "},{"title":"Example","type":1,"pageTitle":"FOREACH","url":"docs/references/formulas/foreach#example","content":"Consider a scenario where you want to calculate the contribution of a particular region, say South to the Total sales.  Region Sales in Millions East 200 West 300 South 250 Total 750  To achieve this, the formula should be  (Sum(THIS)/Sum(ForEach(THIS.PARENT.CHILDREN, THIS) ) )) * 100Copy The contribution of South to Total Sales is calculated to be 33.33%. "},{"title":"FV","type":0,"sectionRef":"#","url":"docs/references/formulas/fv","content":""},{"title":"Syntax","type":1,"pageTitle":"FV","url":"docs/references/formulas/fv#syntax","content":"FV (Rate, Nper, [Pmt], PV, [Type])Copy "},{"title":"Arguments","type":1,"pageTitle":"FV","url":"docs/references/formulas/fv#arguments","content":"Rate – The interest rate per period.  Nper – The total number of periods. Pmt – Equal payments paid out each period during the course of the investment term. This is an optional argument. PV – The present value or initial investment. Cash outflows are considered as negative and cash inflows as positive. Type – Indicates when the payments are made. Type is zero if payments are made at the end of the period and non-zero if payments are made at the start of the period. This is an optional argument and when omitted, it is considered to be zero. "},{"title":"Example","type":1,"pageTitle":"FV","url":"docs/references/formulas/fv#example","content":"Consider a series of $2000 payments made at the end of each year for 6 years. The objective is to calculate the future value at the end of 6 years where the interest rate is 5%.  To calculate the future value, the formula should be  FV (Interest Rate, Number of Periods, PMT,0,0)Copy The future value is calculated to be $13,603.83. "},{"title":"Excel Equivalent","type":1,"pageTitle":"FV","url":"docs/references/formulas/fv#excel-equivalent","content":"FV "},{"title":"GET","type":0,"sectionRef":"#","url":"docs/references/formulas/get","content":""},{"title":"Syntax","type":1,"pageTitle":"GET","url":"docs/references/formulas/get#syntax","content":"Get (period_index)Copy "},{"title":"Arguments","type":1,"pageTitle":"GET","url":"docs/references/formulas/get#arguments","content":"period_index – An integer that is less than the number of periods defined in the model . "},{"title":"Example","type":1,"pageTitle":"GET","url":"docs/references/formulas/get#example","content":"Consider a scenario where you want to refer to last period value of the node Discount.  To achieve this, the formula should be  Discount.Get(12)Copy "},{"title":"GETCURRENTRANGE","type":0,"sectionRef":"#","url":"docs/references/formulas/getcurrentrange","content":""},{"title":"Syntax","type":1,"pageTitle":"GETCURRENTRANGE","url":"docs/references/formulas/getcurrentrange#syntax","content":"DS.(SERIES).GETCURRENTRANGE() "},{"title":"Example","type":1,"pageTitle":"GETCURRENTRANGE","url":"docs/references/formulas/getcurrentrange#example","content":"Consider a scenario where you want the sum of baseline sales to change based on the selections in the Navigation Panel -(Simulation Period and Value Display). This can be achieved by using the formula SUM(DS.Baseline.GETCURRENTRANGE()) "},{"title":"GETROWVALUE","type":0,"sectionRef":"#","url":"docs/references/formulas/getrowvalue","content":""},{"title":"Syntax","type":1,"pageTitle":"GETROWVALUE","url":"docs/references/formulas/getrowvalue#syntax","content":"DS.(SERIES).GETROWVALUE(<source_key>) "},{"title":"Argument","type":1,"pageTitle":"GETROWVALUE","url":"docs/references/formulas/getrowvalue#argument","content":"source_key - string that corresponds to the source key "},{"title":"Example","type":1,"pageTitle":"GETROWVALUE","url":"docs/references/formulas/getrowvalue#example","content":"SUM(DS.Comparison.GETROWVALUE(\"East\")) returns the sum of the values of the data source key East from the comparison series. "},{"title":"IF","type":0,"sectionRef":"#","url":"docs/references/formulas/if","content":""},{"title":"Syntax","type":1,"pageTitle":"IF","url":"docs/references/formulas/if#syntax","content":"IF( logical_test, value_if_true, value_if_false )Copy "},{"title":"Arguments","type":1,"pageTitle":"IF","url":"docs/references/formulas/if#arguments","content":"logical_test – The condition to be evaluated. value_if_true – The value to be returned if the condition is met. value_if_false – The value to be returned if the condition is not met. "},{"title":"Return Value","type":1,"pageTitle":"IF","url":"docs/references/formulas/if#return-value","content":"Either value_if_true or value_if_false. "},{"title":"Remarks","type":1,"pageTitle":"IF","url":"docs/references/formulas/if#remarks","content":"Returns Blank when the formula is misspelled.The IF function returns Error in any of the following cases :value_if_false argument is missingThe argument value_if_true or value_if_false are not of numeric data typeNot using appropriate operator in logical_test "},{"title":"Example","type":1,"pageTitle":"IF","url":"docs/references/formulas/if#example","content":"Consider the Revenue and Cost of Goods Sold nodes to follow the trend as shown below  Parameter Jan Feb Mar Apr May Jun Revenue 100 124 137 0 23 45 Cost of Goods Sold 25 25 25 25 25 25  Now, a new node Gross Profit Margin can computed using the IF function. Gross Profit Margin is calculated as (Revenue-Cost of Goods Sold)/Revenue. In case, Revenue has period value of 0, Gross Profit Margin should return 0. To achieve this, the formula should be  IF(Revenue==0,0,(Revenue-Cost of Goods Sold)/Revenue)Copy The result of the above formula is shown below  Parameter Jan Feb Mar Apr May Jun Gross Profit Margin 75% 80% 82% 0 (9%) 44%  "},{"title":"Excel Equivalent","type":1,"pageTitle":"IF","url":"docs/references/formulas/if#excel-equivalent","content":"IF Tip Use SWITCH function instead of nesting multiple IF functions "},{"title":"IPMT","type":0,"sectionRef":"#","url":"docs/references/formulas/ipmt","content":""},{"title":"Syntax","type":1,"pageTitle":"IPMT","url":"docs/references/formulas/ipmt#syntax","content":"IPMT (Rate, Per, Nper, PV, [FV], [Type])Copy "},{"title":"Arguments","type":1,"pageTitle":"IPMT","url":"docs/references/formulas/ipmt#arguments","content":"Rate – The interest rate per period.  Per – The period for which you want to find the interest and must be in the range 1 to Nper. Nper – The total number of periods. PV – The present value or initial investment. Cash outflows are considered as negative and cash inflows as positive. FV – The future or residual value. This is an optional argument and if omitted, it is considered to be zero. Type – Indicates when the payments are made. Type is zero if payments are made at the end of the period and non-zero if payments are made at the start of the period. This is an optional argument and when omitted, it is considered to be zero. "},{"title":"Example","type":1,"pageTitle":"IPMT","url":"docs/references/formulas/ipmt#example","content":"Consider a $10,000 loan at an annual rate of 10% that is to be paid off in 3 years. All payments are made at the beginning of the month. To calculate the interest payment for a specified period, say 8, the formula should be  IPMT (Rate/12, Period, Number of Years*12, Loan Amount, 0, 1).Copy IPMT is calculated to be $68.45. "},{"title":"Excel Equivalent","type":1,"pageTitle":"IPMT","url":"docs/references/formulas/ipmt#excel-equivalent","content":"IPMT "},{"title":"IRR","type":0,"sectionRef":"#","url":"docs/references/formulas/irr","content":""},{"title":"Syntax","type":1,"pageTitle":"IRR","url":"docs/references/formulas/irr#syntax","content":"IRR (value1,[value2],…, [Guess])Copy "},{"title":"Arguments","type":1,"pageTitle":"IRR","url":"docs/references/formulas/irr#arguments","content":"value1 – The node that contains the order of cash flows for which you want to calculate the internal rate of return. value2,… – The additional nodes that contains the order of cash flows for which you want to calculate the internal rate of return. This is an optional argument. Guess – A value that you guess is close to the actual IRR value. This is an optional argument. "},{"title":"Example","type":1,"pageTitle":"IRR","url":"docs/references/formulas/irr#example","content":"Consider a project with an initial investment of $10,000 and cash inflows of $4,000 for the subsequent four years. The objective is to evaluate the project by calculating IRR.   Period 0 1 2 3 4 Initial Investment -10,000 Cash Inflows 4,000 4,000 4,000 4,000  To achieve this, the formula should be IRR ([Initial Investment,Cash Inflows.ALL_PERIODS])Copy IRR is calculated to be 14.76% "},{"title":"Excel Equivalent","type":1,"pageTitle":"IRR","url":"docs/references/formulas/irr#excel-equivalent","content":"IRR "},{"title":"ISNAN","type":0,"sectionRef":"#","url":"docs/references/formulas/isnan","content":""},{"title":"Syntax","type":1,"pageTitle":"ISNAN","url":"docs/references/formulas/isnan#syntax","content":"ISNAN (value1,value2)Copy "},{"title":"Arguments","type":1,"pageTitle":"ISNAN","url":"docs/references/formulas/isnan#arguments","content":"value1 – The node that is to be checked for error values. value2 – The value which is to replace the error values. "},{"title":"Return value","type":1,"pageTitle":"ISNAN","url":"docs/references/formulas/isnan#return-value","content":"value2 in the place of Error. "},{"title":"Example","type":1,"pageTitle":"ISNAN","url":"docs/references/formulas/isnan#example","content":"Consider the nodes Total Cost and No. of units to have the periods values as shown below  Period Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Total Cost 100 150 200 100 300 250 300 0 225 300 0 300 No. of units 10 15 10 10 15 25 15 0 15 15 0 15  In the below example, Cost per unit is calculated by dividing Total Cost and No. of units.  Before applying ISNAN:  Period Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Cost per unit 10 10 20 10 20 10 20 # 15 20 # 20  Cost per unit returns Error(#) for Aug and Nov, the error is to be replaced with 0. To achieve this, the formula should be  ISNAN(Total Cost/No. of units,0)Copy Applying applying ISNAN:  Period Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Cost per unit 10 10 20 10 20 10 20 0 15 20 0 20  "},{"title":"LASTNPERIODS","type":0,"sectionRef":"#","url":"docs/references/formulas/lastnperiods","content":""},{"title":"Syntax","type":1,"pageTitle":"LASTNPERIODS","url":"docs/references/formulas/lastnperiods#syntax","content":"LastNPeriods (n) Copy "},{"title":"Arguments","type":1,"pageTitle":"LASTNPERIODS","url":"docs/references/formulas/lastnperiods#arguments","content":"n – An integer that is less than the number of periods defined in the model . "},{"title":"Example","type":1,"pageTitle":"LASTNPERIODS","url":"docs/references/formulas/lastnperiods#example","content":"Consider a scenario where you want to calculate the sales in the last 6 months.  To achieve this, the formula should be  Sales.LastNPeriods(6)Copy "},{"title":"LOG","type":0,"sectionRef":"#","url":"docs/references/formulas/log","content":""},{"title":"Syntax","type":1,"pageTitle":"LOG","url":"docs/references/formulas/log#syntax","content":"LOG (value,base)Copy "},{"title":"Arguments","type":1,"pageTitle":"LOG","url":"docs/references/formulas/log#arguments","content":"value – The positive real number for which you want the logarithm. base – The base of the logarithm. "},{"title":"Example","type":1,"pageTitle":"LOG","url":"docs/references/formulas/log#example","content":"If value = 30 and base = 5, LOG (value, base) returns 2.11.  "},{"title":"Excel Equivalent","type":1,"pageTitle":"LOG","url":"docs/references/formulas/log#excel-equivalent","content":"LOG "},{"title":"MAX","type":0,"sectionRef":"#","url":"docs/references/formulas/max","content":""},{"title":"Syntax","type":1,"pageTitle":"MAX","url":"docs/references/formulas/max#syntax","content":"MAX (value1,[value2]....)Copy "},{"title":"Arguments","type":1,"pageTitle":"MAX","url":"docs/references/formulas/max#arguments","content":"value1,value2 … – The nodes or numbers of which you want the largest of.  "},{"title":"Example","type":1,"pageTitle":"MAX","url":"docs/references/formulas/max#example","content":"Consider a node which has the demand for a particular product for 12 months.   Month Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Demand 180 200 238 174 286 319 265 136 220 260 300 315  To calculate the maximum demand, the formula should be  MAX (Demand.ALL_PERIODS).Copy The maximum demand is calculated to be 319.  "},{"title":"Excel Equivalent","type":1,"pageTitle":"MAX","url":"docs/references/formulas/max#excel-equivalent","content":"MAX "},{"title":"ME","type":0,"sectionRef":"#","url":"docs/references/formulas/me","content":""},{"title":"Examples","type":1,"pageTitle":"ME","url":"docs/references/formulas/me#examples","content":"To access the parent node of the current node, the formula should be  ME.PARENTCopy To access the child node of the current node, the formula should be  ME.CHILDRENCopy "},{"title":"MIN","type":0,"sectionRef":"#","url":"docs/references/formulas/min","content":""},{"title":"Syntax","type":1,"pageTitle":"MIN","url":"docs/references/formulas/min#syntax","content":"MIN (value1,[value2]....)Copy "},{"title":"Arguments","type":1,"pageTitle":"MIN","url":"docs/references/formulas/min#arguments","content":"`value1,value2 … – The nodes or numbers of which you want the smallest of.  "},{"title":"Example","type":1,"pageTitle":"MIN","url":"docs/references/formulas/min#example","content":"Consider a node which has the demand for a particular product for 12 months.   Month Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Demand 180 200 238 174 286 319 265 136 220 260 300 315  To calculate the minimum demand, the formula should be  MIN (Demand.ALL_PERIODS)``The minimum demand is calculated to be 136. ## Excel Equivalent[MIN](https://support.office.com/en-us/article/MIN-function-61635D12-920F-4CE2-A70F-96F202DCC152) Copy "},{"title":"NODE PROPERTIES","type":0,"sectionRef":"#","url":"docs/references/formulas/node-properties","content":""},{"title":"[NODE].PARENT","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodeparent","content":"[NODE].PARENT refers to the parent node of the NODE. "},{"title":"[NODE].CHILDREN","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodechildren","content":"[NODE].CHILDREN refers to the children nodes of the NODE. "},{"title":"[NODE].VISIBLE_CHILDREN","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodevisible_children","content":"[NODE].VISIBLE_CHILDREN refers to the children nodes of the NODE that are not hidden. "},{"title":"[NODE].HIDDEN_CHILDREN","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodehidden_children","content":"[NODE].HIDDEN_CHILDREN refers to the children nodes of the NODE that are hidden. "},{"title":"[NODE].ID","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodeid","content":"[NODE].ID returns the node ID. "},{"title":"[NODE].ACT","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodeact","content":"[NODE].ACT refers to the Simulated Series of the node. "},{"title":"[NODE].TGT","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodetgt","content":"[NODE].TGT refers to the Comparison Series of the node. "},{"title":"[NODE].BASE","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodebase","content":"[NODE].BASE refers to the Baseline Series of the node. "},{"title":"[NODE].ALL_PERIODS","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodeall_periods","content":"[NODE].ALL_PERIODS refers to all period values. "},{"title":"[NODE].SIM_PERIODS","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodesim_periods","content":"[NODE].SIM_PERIODS refers to simulated period values. "},{"title":"[NODE].ACT.ALL_PERIODS","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodeactall_periods","content":"[NODE].act.ALL_PERIODS returns all period values of the simulated series. "},{"title":"[NODE].TGT.ALL_PERIODS","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodetgtall_periods","content":"[NODE].tgt.ALL_PERIODS returns all period values of the comparison series. "},{"title":"[NODE].BASE.ALL_PERIODS","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodebaseall_periods","content":"[NODE].base.ALL_PERIODS returns all period values of the baseline series. "},{"title":"[NODE].ACT.SIM_PERIODS","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodeactsim_periods","content":"[NODE].act.SIM_PERIODS returns simulated period values of the simulated series. "},{"title":"[NODE].TGT.SIM_PERIODS","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodetgtsim_periods","content":"[NODE].tgt.SIM_PERIODS returns simulated period values of the comparison series. "},{"title":"[NODE].BASE.SIM_PERIODS","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodebasesim_periods","content":"[NODE].base.SIM_PERIODS returns simulated period values of the baseline series. "},{"title":"[NODE].TOTAL","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodetotal","content":"[NODE].TOTAL returns the all period aggregated value of the node. "},{"title":"[NODE].PTD","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodeptd","content":"[NODE].PTD returns the period till date aggregated value of the node. "},{"title":"[NODE].SEL","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodesel","content":"[NODE].SEL returns the simulation period aggregated value of the node. "},{"title":"[NODE].RANGE(START_INDEX,END_INDEX)","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#noderangestart_indexend_index","content":"[NODE].RANGE(start_index,end_index) returns selected range values of the node. "},{"title":"[NODE].ACT.RANGE(START_INDEX,END_INDEX)","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodeactrangestart_indexend_index","content":"[NODE].ACT.RANGE(start_index,end_index) returns selected range values of Simulated Series. "},{"title":"[NODE].BASE.RANGE(START_INDEX,END_INDEX)","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodebaserangestart_indexend_index","content":"[NODE].BASE.RANGE(start_index,end_index) returns selected range values of Baseline Series. "},{"title":"[NODE].TGT.RANGE(START_INDEX,END_INDEX)","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodetgtrangestart_indexend_index","content":"[NODE].TGT.RANGE(start_index,end_index) returns selected range values of Comparison Series. "},{"title":"[NODE].GET(PERIOD_INDEX)","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodegetperiod_index","content":"[NODE].GET(period_index) returns the selected period value of the node. "},{"title":"[NODE].ACT.GET(PERIOD_INDEX)","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodeactgetperiod_index","content":"[NODE].ACT.GET(period_index) returns the selected period value of the Simulated Series. "},{"title":"[NODE].BASE.GET(PERIOD_INDEX)","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodebasegetperiod_index","content":"[NODE].BASE.GET(period_index) returns the selected period value of the Baseline Series. "},{"title":"[NODE].TGT.GET(PERIOD_INDEX)","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodetgtgetperiod_index","content":"[NODE].TGT.GET(period_index) returns the selected period value of the Comparison Series. "},{"title":"[NODE].LastNPeriods(n)","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodelastnperiodsn","content":"[NODE].LastNPeriods(n) returns selected range values of the node. "},{"title":"[NODE].ACT.LASTNPERIODS(N)","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodeactlastnperiodsn","content":"[NODE].ACT.LastNPeriods(n) returns selected range values of the Simulated Series. "},{"title":"[NODE].BASE.LASTNPERIODS(N)","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodebaselastnperiodsn","content":"[NODE].BASE.LastNPeriods(n) returns selected range values of the Baseline Series. "},{"title":"[NODE].TGT.LASTNPERIODS(N)","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodetgtlastnperiodsn","content":"[NODE].TGT.LastNPeriods(n) returns selected range values of the Comparison Series. "},{"title":"[NODE].TOTAL","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodetotal-1","content":"[NODE].TOTAL returns the all period aggregated value of node. "},{"title":"[NODE].PTD","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodeptd-1","content":"[NODE].PTD returns the period to date aggregated value of node. "},{"title":"[NODE].SEL","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodesel-1","content":"[NODE].SEL returns the simulation period aggregated value of node. "},{"title":"[NODE].ID","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodeid-1","content":"[NODE].ID returns node id. "},{"title":"[NODE].VISIBLE_CHILDREN","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodevisible_children-1","content":"[NODE].VISIBLE_CHILDREN returns all visible children of node. "},{"title":"[NODE].HIDDEN_CHILDREN","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#nodehidden_children-1","content":"[NODE].HIDDEN_CHILDREN returns all hidden children of node. "},{"title":"CURRENT_NODE_VALUE","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#current_node_value","content":"CURRENT_NODE_VALUE returns the Current node previous period values. "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example","content":"If the node Sales has child nodes, East, West, South and Central, the node Sales can be referred to as East.PARENT, West.PARENT, South.PARENT or Central.PARENT. "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example-1","content":"If the node Sales has child nodes, East, West, South and Central, the child nodes of Sales can be referred to using Sales.CHILDREN. "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example-2","content":"If a node N2 is defined as N1.ACT, the node N2 will be assigned the simulated series value of N1. "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example-3","content":"If a node N2 is defined as N1.TGT, the node N2 will be assigned the comparison series value of N1. "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example-4","content":"If a node N2 is defined as N1.BASE, the node N2 will be assigned the baseline series value of N1. Consider a node with the following data.  Period Node N1 Baseline Series Comparison Series Simulated Series Week1 20 15 25 Week2 20 15 25 Week3 20 15 25 Week4 20 15 25  The results of the calculations are shown below.  Period Node N2 N1.ACT N1.TGT N1.BASE Week1 25 15 20 Week2 25 15 20 Week3 25 15 20 Week4 25 15 20  "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example-5","content":"The periods in a model are defined from Jan to Dec and the active simulation period is from Jun to Dec. Node N1 has the following values:  Period Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Values 10 15 20 10 15 25 30 15 20 25 35 30  [NODE].ALL_PERIODS returns [10,15,20,10,15,25,30,15,20,25,35,30]. [NODE].SIM_PERIODS returns [25,30,15,20,25,35,30]. "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example-6","content":"The periods in a model are defined from Jan to Dec and the active simulation period is from Jun to Dec. Node N1 has the following values:  Period Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Baseline 10 15 20 10 15 25 30 15 20 25 35 30 Comparison 15 15 15 15 15 15 15 15 15 15 15 15 Simulated 10 15 20 10 15 30 36 18 24 30 42 36  [NODE].ACT.ALL_PERIODS returns [10,15,20,10,15,30,36,18,24,30,42,36]. [NODE].TGT.ALL_PERIODS returns [15,15,15,15,15,15,15,15,15,15,15,15]. [NODE].BASE.ALL_PERIODS returns [10,15,20,10,15,25,30,15,20,25,35,30]. "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example-7","content":"The periods in a model are defined from Jan to Dec and the active simulation period is from Jun to Dec. Node N1 has the following values:  Period Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Baseline 10 15 20 10 15 25 30 15 20 25 35 30 Comparison 15 15 15 15 15 15 15 15 15 15 15 15 Simulated 10 15 20 10 15 30 36 18 24 30 42 36  [NODE].ACT.SIM_PERIODS returns [30,36,18,24,30,42,36]. [NODE].TGT.SIM_PERIODS returns [15,15,15,15,15,15,15]. [NODE].BASE.SIM_PERIODS returns [25,30,15,20,25,35,30]. "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example-8","content":"The periods in a model are defined from Jan to Dec and the active simulation period is from Jun to Dec. Node N1 has the following values:  Period Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Values 10 15 20 10 15 25 30 15 20 25 35 30  [NODE].TOTAL returns 250. [NODE].PTD returns 70. [NODE].SEL returns 180. "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example-9","content":"The periods in a model are defined from Jan to Dec. Node N1 has the following values:  Period Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Baseline 10 15 20 10 15 25 30 15 20 25 35 30 Comparison 15 15 15 15 15 15 15 15 15 15 15 15 Simulated 10 15 20 10 15 30 36 18 24 30 42 36  [NODE].RANGE(2,4) returns a node with baseline as [15,20,10] and comparison as [15,15,15]. [NODE].ACT.RANGE(9,12) returns a node with baseline and comparison as [24,30,42,26]. [NODE].TGT.RANGE(2,4) returns a node with baseline and comparison as [15,15,15]. [NODE].BASE.RANGE(9,12) returns [20,25,35,30]. "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example-10","content":"The periods in a model are defined from Jan to Dec. Node N1 has the following values:  Period Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Baseline 10 15 20 10 15 25 30 15 20 25 35 30 Comparison 15 15 15 15 15 15 15 15 15 15 15 15 Simulated 10 15 20 10 15 30 36 18 24 30 42 36  [NODE].GET(2) returns the value 15. [NODE].ACT.GET(9) returns the value 24. [NODE].TGT.GET(9) returns the value 15. [NODE].BASE.GET(9) returns the value 20. "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example-11","content":"The periods in a model are defined from Jan to Dec. Node N1 has the following values:  Period Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Baseline 10 15 20 10 15 25 30 15 20 25 35 30 Comparison 15 15 15 15 15 15 15 15 15 15 15 15 Simulated 10 15 20 10 15 30 36 18 24 30 42 36  [NODE].LastNPeriods(2) returns the values [35,30]. [NODE].ACT.LastNPeriods(2) returns the values [42,36]. [NODE].TGT.LastNPeriods(2) returns the values [15,15]. [NODE].BASE.LastNPeriods(2) returns the values [35,30]. "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example-12","content":"The periods in a model are defined from Jan to Dec and the active simulation period is from Jun to Dec. Node N1 has the following values:  Period Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Values 10 15 20 10 15 25 30 15 20 25 35 30  [NODE].TOATL returns the value 250 . [NODE].PTD returns the value 70. [NODE].SEL returns the value 180. "},{"title":"Example","type":1,"pageTitle":"NODE PROPERTIES","url":"docs/references/formulas/node-properties#example-13","content":"IF ( CURRENT_PERIOD_VALUE ==0, 1000, CURRENT_NODE_VALUE.GET(CURRENT_PERIOD_VALUE-1) * 1.1) "},{"title":"NOT","type":0,"sectionRef":"#","url":"docs/references/formulas/not","content":""},{"title":"Syntax","type":1,"pageTitle":"NOT","url":"docs/references/formulas/not#syntax","content":"NOT ( logical_test )Copy "},{"title":"Arguments","type":1,"pageTitle":"NOT","url":"docs/references/formulas/not#arguments","content":"logical_test – The condition to be evaluated. "},{"title":"Return value","type":1,"pageTitle":"NOT","url":"docs/references/formulas/not#return-value","content":"Either True or False "},{"title":"Example","type":1,"pageTitle":"NOT","url":"docs/references/formulas/not#example","content":"Consider a scenario in which an employee is eligible for Sales Bonus if Total Sales is greater than Sales Goal. Sales Bonus is calculated as Bonus% * Total Sales. To achieve this, the formula should be  IF (NOT (Total Sales > Sales Goal), 0 , Bonus% * Total Sales)Copy "},{"title":"Excel Equivalent","type":1,"pageTitle":"NOT","url":"docs/references/formulas/not#excel-equivalent","content":"NOT "},{"title":"NPV","type":0,"sectionRef":"#","url":"docs/references/formulas/npv","content":""},{"title":"Syntax","type":1,"pageTitle":"NPV","url":"docs/references/formulas/npv#syntax","content":"NPV (Rate, value1, [value2], ...)Copy "},{"title":"Arguments","type":1,"pageTitle":"NPV","url":"docs/references/formulas/npv#arguments","content":"Rate – The rate of discount. value1 – The node that contains the order of cash flows for which you want to calculate the net present value. value2,… – The additional nodes that contains the order of cash flows for which you want to calculate the net present value. This is an optional argument. "},{"title":"Example","type":1,"pageTitle":"NPV","url":"docs/references/formulas/npv#example","content":"Consider a project with an initial investment of $10,000 and cash inflows of $4,000 for the subsequent four years. Discount rate is 12%. The objective is to evaluate the project by calculating NPV.   Period 0 1 2 3 4 Initial Investment -10,000 Cash Inflows 4,000 4,000 4,000 4,000  To achieve this, the formula should be  NPV ([Discount Rate,Cash Inflows.ALL_PERIODS]) + Initial InvestmentCopy NPV is calculated to be $847.68.  "},{"title":"Excel Equivalent","type":1,"pageTitle":"NPV","url":"docs/references/formulas/npv#excel-equivalent","content":"NPV "},{"title":"OR","type":0,"sectionRef":"#","url":"docs/references/formulas/or","content":""},{"title":"Syntax","type":1,"pageTitle":"OR","url":"docs/references/formulas/or#syntax","content":"OR ( logical_test1, [logical_test2], ... )Copy "},{"title":"Arguments","type":1,"pageTitle":"OR","url":"docs/references/formulas/or#arguments","content":"logical_test1 – The first condition to be evaluated. This is a required argument. logical_test2, … – The additional conditions to be evaluated. These are optional arguments. "},{"title":"Return value","type":1,"pageTitle":"OR","url":"docs/references/formulas/or#return-value","content":"Either True or False. "},{"title":"Remarks","type":1,"pageTitle":"OR","url":"docs/references/formulas/or#remarks","content":"The OR function accepts multiple conditions. "},{"title":"Example","type":1,"pageTitle":"OR","url":"docs/references/formulas/or#example","content":"Consider a scenario in which if the number of licenses is greater than 500 or the usage period is greater than 24 months, then the price should be $20 else $25. To achieve this, the formula should be  IF(OR(Num_of_Licenses>500,Duration<24),20,25)Copy "},{"title":"Excel Equivalent","type":1,"pageTitle":"OR","url":"docs/references/formulas/or#excel-equivalent","content":"OR "},{"title":"PMT","type":0,"sectionRef":"#","url":"docs/references/formulas/pmt","content":""},{"title":"Syntax","type":1,"pageTitle":"PMT","url":"docs/references/formulas/pmt#syntax","content":"PMT (Rate, Nper, PV, [FV], [Type])Copy "},{"title":"Arguments","type":1,"pageTitle":"PMT","url":"docs/references/formulas/pmt#arguments","content":"Rate – The interest rate per period.  Nper – The total number of periods. PV – The present value or initial investment. Cash outflows are considered as negative and cash inflows as positive. FV – The future or residual value. This is an optional argument and if omitted, it is considered to be zero. Type – Indicates when the payments are made. Type is zero if payments are made at the end of the period and non-zero if payments are made at the start of the period. This is an optional argument and when omitted, it is considered to be zero. "},{"title":"Example","type":1,"pageTitle":"PMT","url":"docs/references/formulas/pmt#example","content":"Consider a $10,000 loan at an annual rate of 10% that is to be paid off in 3 years. All payments are made at the beginning of the month. To calculate the monthly payments that are to be made, the formula should be  PMT (Rate/12, Number of Years*12, Loan Amount, 0, 1)Copy PMT is calculated to be $320.01. "},{"title":"Excel Equivalent","type":1,"pageTitle":"PMT","url":"docs/references/formulas/pmt#excel-equivalent","content":"PMT "},{"title":"POWER","type":0,"sectionRef":"#","url":"docs/references/formulas/power","content":""},{"title":"Syntax","type":1,"pageTitle":"POWER","url":"docs/references/formulas/power#syntax","content":"POW (value,power)Copy "},{"title":"Arguments","type":1,"pageTitle":"POWER","url":"docs/references/formulas/power#arguments","content":"value – The base number, it can be any real number or node. power – The exponent to which the value is raised.  "},{"title":"Example","type":1,"pageTitle":"POWER","url":"docs/references/formulas/power#example","content":"If value = 2 and power = 5, POW (value, power) returns 32. "},{"title":"Excel Equivalent","type":1,"pageTitle":"POWER","url":"docs/references/formulas/power#excel-equivalent","content":"POWER "},{"title":"PV","type":0,"sectionRef":"#","url":"docs/references/formulas/pv","content":""},{"title":"Syntax","type":1,"pageTitle":"PV","url":"docs/references/formulas/pv#syntax","content":"PV (Rate, Nper, [Pmt], FV, [Type])Copy "},{"title":"Arguments","type":1,"pageTitle":"PV","url":"docs/references/formulas/pv#arguments","content":"Rate – The interest rate per period.  Nper – The total number of periods. Pmt – Equal payments paid out each period during the course of the investment term. This is an optional argument. FV – The future value of investment. Cash outflows are considered as negative and cash inflows as positive. Type – Indicates when the payments are made. Type is zero if payments are made at the end of the period and non-zero if payments are made at the start of the period. This is an optional argument and when omitted, it is considered to be zero. "},{"title":"Example","type":1,"pageTitle":"PV","url":"docs/references/formulas/pv#example","content":"Consider a series of $2000 payments made at the end of each year for 6 years. The objective is to calculate the present value where the interest rate is 5%.  To calculate the present value, the formula should be  PV (Interest Rate, Number of Periods, PMT,0,0)Copy The present value is calculated to be $10,151.38. "},{"title":"Excel Equivalent","type":1,"pageTitle":"PV","url":"docs/references/formulas/pv#excel-equivalent","content":"PV "},{"title":"RANGE","type":0,"sectionRef":"#","url":"docs/references/formulas/range","content":""},{"title":"Syntax","type":1,"pageTitle":"RANGE","url":"docs/references/formulas/range#syntax","content":"Range (start_index,end_index)Copy "},{"title":"Arguments","type":1,"pageTitle":"RANGE","url":"docs/references/formulas/range#arguments","content":"start_index – The starting periods’ index. end_index – The ending periods’ index. "},{"title":"Example","type":1,"pageTitle":"RANGE","url":"docs/references/formulas/range#example","content":"Consider a scenario where the salesperson gets a bonus of 20% if the total sales for the first quarter is greater than the target. To achieve this, the formula should be  IF (Total Sales.Range(1,3)>Target, Total Sales*0.2,0).Copy "},{"title":"RATE","type":0,"sectionRef":"#","url":"docs/references/formulas/rate","content":""},{"title":"Syntax","type":1,"pageTitle":"RATE","url":"docs/references/formulas/rate#syntax","content":"RATE (Nper, PMT, PV, [FV], [Type], [Guess])Copy "},{"title":"Arguments","type":1,"pageTitle":"RATE","url":"docs/references/formulas/rate#arguments","content":"Nper – The total number of periods. PMT – The payment made each period. PV – The present value - the total amount that a series of future payments is worth now.  FV – The future value or a cash balance you want to attain after the last payment is made. This is an optional argument. Type – Indicates when the payments are made. Type is zero if payments are made at the end of the period and non-zero if payments are made at the start of the period.  Guess – Estimate of what the rate will be. This is an optional argument. "},{"title":"Example","type":1,"pageTitle":"RATE","url":"docs/references/formulas/rate#example","content":"Consider a series of $2000 payments made at the end of each year for 6 years. The objective is to calculate the interest rate where the present value is $10,000.  To calculate the present value, the formula should be  RATE (Number of Periods, PMT, Present Value,0)Copy The interest rate is calculated to be 5.47%. "},{"title":"Excel Equivalent","type":1,"pageTitle":"RATE","url":"docs/references/formulas/rate#excel-equivalent","content":"RATE "},{"title":"SIM_FROM_INDEX, SIM_TO_INDEX","type":0,"sectionRef":"#","url":"docs/references/formulas/sim_from_to_index","content":""},{"title":"Syntax","type":1,"pageTitle":"SIM_FROM_INDEX, SIM_TO_INDEX","url":"docs/references/formulas/sim_from_to_index#syntax","content":"SIM_FROM_INDEX starting periond index of simulation range selected in navigation pannel SIM_TO_INDEX ending periond index of simulation range selected in navigation pannel "},{"title":"Example","type":1,"pageTitle":"SIM_FROM_INDEX, SIM_TO_INDEX","url":"docs/references/formulas/sim_from_to_index#example","content":"If Simulation period is seletected as Feb to June then SIM_FROM_INDEX will be 2 and SIM_TO_INDEX will be 6 SIM_TO_INDEX - SIM_FROM_INDEX // will return 4Copy "},{"title":"SQRT","type":0,"sectionRef":"#","url":"docs/references/formulas/sqrt","content":""},{"title":"Syntax","type":1,"pageTitle":"SQRT","url":"docs/references/formulas/sqrt#syntax","content":"SQRT (value)Copy "},{"title":"Arguments","type":1,"pageTitle":"SQRT","url":"docs/references/formulas/sqrt#arguments","content":"value – The number or node of which you want the square root of. "},{"title":"Example","type":1,"pageTitle":"SQRT","url":"docs/references/formulas/sqrt#example","content":"If value = 36, SQRT(value) returns 6. "},{"title":"Excel Equivalent","type":1,"pageTitle":"SQRT","url":"docs/references/formulas/sqrt#excel-equivalent","content":"SQRT "},{"title":"SUM","type":0,"sectionRef":"#","url":"docs/references/formulas/sum","content":""},{"title":"Syntax","type":1,"pageTitle":"SUM","url":"docs/references/formulas/sum#syntax","content":"SUM (value1,[value2]....)Copy "},{"title":"Arguments","type":1,"pageTitle":"SUM","url":"docs/references/formulas/sum#arguments","content":"value1 – The first node or number to be added. This is a required argument. value2, … – The additional nodes or numbers to be added. These are optional arguments. "},{"title":"Example","type":1,"pageTitle":"SUM","url":"docs/references/formulas/sum#example","content":"Consider sales of a particular product across different regions East, South, Central and West to be as follows. The total sales is to be calculated.  Region Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec East 100 100 125 150 100 100 120 125 0 0 0 0 South 0 0 150 200 200 175 175 150 150 125 125 175 Central 100 100 125 150 100 0 0 0 150 200 200 175 West 0 0 150 125 125 175 200 175 175 125 0 0 Total Sales 200 200 550 625 525 450 495 450 475 450 325 350  The total sales should be defined as  SUM (East, South, Central, West)Copy "},{"title":"Excel Equivalent","type":1,"pageTitle":"SUM","url":"docs/references/formulas/sum#excel-equivalent","content":"SUM "},{"title":"SWITCH","type":0,"sectionRef":"#","url":"docs/references/formulas/switch","content":""},{"title":"Syntax","type":1,"pageTitle":"SWITCH","url":"docs/references/formulas/switch#syntax","content":"SWITCH ( expression, value1, result1, value2, result2, ... value_n, result_n, [default] )Copy "},{"title":"Arguments","type":1,"pageTitle":"SWITCH","url":"docs/references/formulas/switch#arguments","content":"expression – The statement to be evaluated. value1, value2, … value_n – The list of values to be compared against the expression. result1, result2, … result_n – The result to be returned if the expression matches with the corresponding value in the argument list. default – The default value to be returned if the expression does not match with any of the values in the argument list. This is an optional argument. "},{"title":"Return value","type":1,"pageTitle":"SWITCH","url":"docs/references/formulas/switch#return-value","content":"result when the expression matches with value, default in case there was no match. "},{"title":"Remark","type":1,"pageTitle":"SWITCH","url":"docs/references/formulas/switch#remark","content":"All result expressions and the else expression must be of the same data type. "},{"title":"Example","type":1,"pageTitle":"SWITCH","url":"docs/references/formulas/switch#example","content":"Consider a scenario in which the node Discount Rate is to be calculated based on the current month. Months Jan, Aug, Nov and Dec should have 15% as discount rate whereas the remaining months should have 20%. This can be achieved by using the SWITCH function in the following manner. SWITCH(CURRENT_PERIOD_INDEX,1,0.15,8,0.15,11,0.15,12,0.15,0.20)Copy The result of the above formula is shown below  Month Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Discount Rate 15% 20% 20% 20% 20% 20% 20% 15% 20% 20% 15% 15%  "},{"title":"Excel Equivalent","type":1,"pageTitle":"SWITCH","url":"docs/references/formulas/switch#excel-equivalent","content":"SWITCH "},{"title":"THIS","type":0,"sectionRef":"#","url":"docs/references/formulas/this","content":""},{"title":"Examples","type":1,"pageTitle":"THIS","url":"docs/references/formulas/this#examples","content":"To access the parent node of the current node, the formula should be  THIS.PARENTCopy To access the child node of the current node, the formula should be  THIS.CHILDRENCopy "},{"title":"THIS_ID","type":0,"sectionRef":"#","url":"docs/references/formulas/thisid","content":""},{"title":"Syntax","type":1,"pageTitle":"THIS_ID","url":"docs/references/formulas/thisid#syntax","content":"DS.(SERIES).THIS_ID "},{"title":"Example","type":1,"pageTitle":"THIS_ID","url":"docs/references/formulas/thisid#example","content":"Consider a scenario where you want to assign a node's value and the node ID matches the source key. This can be achieved by using SUM(DS.(SERIES).THIS_ID). This is especially useful when you want to use data from the additional series. "},{"title":"THIS_SOURCE_KEY","type":0,"sectionRef":"#","url":"docs/references/formulas/thissourcekey","content":""},{"title":"Syntax","type":1,"pageTitle":"THIS_SOURCE_KEY","url":"docs/references/formulas/thissourcekey#syntax","content":"DS.(SERIES).THIS_SOURCE_KEY "},{"title":"Example","type":1,"pageTitle":"THIS_SOURCE_KEY","url":"docs/references/formulas/thissourcekey#example","content":"Consider a scenario where you have a node called 'East_Industrials'. The baseline and comparison series are sales actuals and budget and the third series Salespersons is the number of salespersons associated. You want to display the number of salespersons as a secondary KPI. This can be achieved by using SUM(DS.Salespersons.THIS_SOURCE_KEY). This function matches the source key 'East_Industrials' in the series Salespersons and displays the corresponding value. "},{"title":"XOR","type":0,"sectionRef":"#","url":"docs/references/formulas/xor","content":""},{"title":"Syntax","type":1,"pageTitle":"XOR","url":"docs/references/formulas/xor#syntax","content":"XOR ( logical_test1, [logical_test2], ... )Copy "},{"title":"Arguments","type":1,"pageTitle":"XOR","url":"docs/references/formulas/xor#arguments","content":"logical_test1 – The first condition to be evaluated. This is a required argument. logical_test2, … – The additional conditions to be evaluated. These are optional arguments. "},{"title":"Return value","type":1,"pageTitle":"XOR","url":"docs/references/formulas/xor#return-value","content":"Either True or False "},{"title":"Remark","type":1,"pageTitle":"XOR","url":"docs/references/formulas/xor#remark","content":"The result of XOR is TRUE when the number of TRUE inputs is odd and FALSE when the number of TRUE inputs is even. "},{"title":"Example","type":1,"pageTitle":"XOR","url":"docs/references/formulas/xor#example","content":"Consider an investment scenario of investing in either stocks or property, but not both. To achieve this, the formula should be  IF (XOR (stocks, property), invested, not invested).Copy "},{"title":"Excel Equivalent","type":1,"pageTitle":"XOR","url":"docs/references/formulas/xor#excel-equivalent","content":"XOR "},{"title":"List of Formulas and Functions","type":0,"sectionRef":"#","url":"docs/resources/formula-list","content":""},{"title":"Logical Functions","type":1,"pageTitle":"List of Formulas and Functions","url":"docs/resources/formula-list#logical-functions","content":" NAME SYNTAX DESCRIPTION IF If( logical_test, value_if_true, value_if_false ) Checks whether a condition is met, and returns one value if TRUE, and another value if FALSE SWITCH SWITCH ( expression, value1, result1, value2, result2, ... value_n, result_n [, default] ) Evaluates an expression against a list of values and returns the result corresponding to the first matching value. If there is no match, an optional default value is returned. AND AND( logical_test1, [logical_test2], ... ) Checks whether all the arguments are TRUE, and returns TRUE if all arguments are TRUE OR OR( logical_test1, [logical_test2], ... ) Checks whether any of the arguments are TRUE, and returns TRUE or FALSE. Returns FALSE only if all arguments are FALSE NOT NOT( logical_test ) Changes FALSE to TRUE, or TRUE to FALSE XOR XOR( logical_test1, [logical_test2], ... ) Returns a logical &apos;Exclusive Or&apos; of all arguments ISNAN ISNAN (value1,value2) Returns a default value if the value in the node is an error.  "},{"title":"Logical Operators","type":1,"pageTitle":"List of Formulas and Functions","url":"docs/resources/formula-list#logical-operators","content":" OPERATORS DESCRIPTION &amp;&amp; Logical AND || Logical OR  "},{"title":"Math Functions","type":1,"pageTitle":"List of Formulas and Functions","url":"docs/resources/formula-list#math-functions","content":" NAME SYNTAX DESCRIPTION SUM Sum(value1,[value2]....) Add all numbers in the arguments, which can be numbers or node references AVERAGE Average(value1,[value2]....) Returns the average (arithmetic mean) of its arguments, which can be numbers or node references AVERAGEEXZERO AverageExZero(value1,[value2]....) Returns the average (arithmetic mean) of its arguments excluding zeros, which can be numbers or node references AVERAGEEXNEG AverageExNeg(value1,[value2]....) Returns the average (arithmetic mean) of its arguments excluding negatives, which can be numbers or node references AVERAGEEXZERONEG AverageExZeroNeg(value1,[value2]....) Returns the average (arithmetic mean) of its arguments excluding zeros and negatives, which can be numbers or node references COUNT Count(value1,[value2]....) Counts the number of items in a range ABS ABS(value) Returns the absolute value of a number, a number without its sign MIN Min(value1,[value2]....) Returns the smallest number in a set of values. Node references also accepted as arguments MAX Max(value1,[value2]....) Returns the largest number in a set of values. Node references also accepted as arguments POWER POW(value,power) Returns the result of a number raised to a power SQRT SQRT(value) Returns the square root of a number EXP EXP(value) Returns e raised to the power of a given number LOG LOG(value,base) Returns the logarithm of a number to the base you specify  "},{"title":"Finance Functions","type":1,"pageTitle":"List of Formulas and Functions","url":"docs/resources/formula-list#finance-functions","content":" NAME SYNTAX DESCRIPTION IRR IRR (Values, [Guess]) Returns the internal rate of return for a series of cash flows. Node references also accepted as arguments NPV NPV (Rate, value1, [value2], ...) Returns the net present value of an investment based on a discount rate and a series of future payments (negative values) and income (positive values) PMT PMT(Rate, Nper, PV, [FV], [Type]) Calculates the payment for a loan based on constant payments and a constant interest rate IPMT IPMT (Rate, Per, Nper, PV, [FV], [Type]) Returns the interest payment for a given period for an investment,based on periodic, constant payments and a constant interest rate FV FV (Rate, Nper, [Pmt], PV, [Type]) Returns the future value of an investment based on periodic, constant payments and a constant interest rate PV PV(Rate, Nper, [Pmt], FV, [Type]) Returns the present value of an investment CUMIPMT CUMIPMT (Rate, Nper, PV, start_period, end_period, Type) Returns the cumulative interest paid between two periods CUMPRINC CUMPRINC (Rate, Nper, PV, start_period, end_period, Type) Returns the cumulative principal paid on a loan between two periods RATE RATE(Nper, PMT, PV, [FV], [Type], [Guess]) Returns the interest rate per period of a loan or an investment.  "},{"title":"Range Functions","type":1,"pageTitle":"List of Formulas and Functions","url":"docs/resources/formula-list#range-functions","content":" NAME SYNTAX DESCRIPTION Range .Range(start_index,end_index) LastNPeriods .LastNPeriods(n) Get .Get(period_index) ForEach ForEach(Array,Iterator) Iterator function findByID findByID(&quot;ID match string&quot;) Tagging/Grouping function findByTitle findByTitle(&quot;Title match string&quot;) Tagging/Grouping function GETCURRENTRANGE DS.(SERIES).GETCURRENTRANGE() Current range based on period selection GETROWVALUE DS.(SERIES).GETROWVALUE(source_key) Value of source key row THIS_ID DS.(SERIES).THIS_ID THIS_SOURCE_KEY DS.(SERIES).THIS_SOURCE_KEY Returns the value of the row with node id as source key  "},{"title":"Static Identifiers And Other Formats","type":1,"pageTitle":"List of Formulas and Functions","url":"docs/resources/formula-list#static-identifiers-and-other-formats","content":" CONSTANTS EXPLANATION THIS Current Node ME Current Node CURRENT_SERIES Current series label CURRENT_SERIES_ID Current series id CURRENT_PERIOD_INDEX Current period index CURRENT_NODE_VALUE Current node previous period values SIM_FROM_INDEX Sim From period index SIM_TO_INDEX Sim To period index [NODE].PARENT Parent Node [NODE].CHILDREN Node children [NODE].act Simulated Series of the node [NODE].tgt Comparison Series of the node [NODE].base Baseline Series of the node [NODE].ALL_PERIODS Returns all Period values [NODE].SIM_PERIODS Returns simulation period values [NODE].act.ALL_PERIODS Returns all period values of Simulated Series, [NODE].tgt.ALL_PERIODS Returns all period values of Comparison Series [NODE].base.ALL_PERIODS Returns all period values of Baseline Series [NODE].act.SIM_PERIODS Returns simulation period values of Simulated Series [NODE].tgt.SIM_PERIODS Returns simulation period values of Comparison Series [NODE].base.SIM_PERIODS Returns simulation period values of Baseline Series [NODE].Range(start_index,end_index) Returns selected range values [NODE].act.Range(start_index,end_index) Returns selected range values of Simulated Series [NODE].base.Range(start_index,end_index) Returns selected range values of Baseline Series [NODE].tgt.Range(start_index,end_index) Returns selected range values of Comparison Series [NODE].Get(period_index) Returns selected period value [NODE].act.Get(period_index) Returns selected period value of Simulated Series [NODE].base.Get(period_index) Returns selected period value of Baseline Series [NODE].tgt.Get(period_index) Returns selected period value of Comparison Series [NODE].LastNPeriods(n) Returns selected range values [NODE].act.LastNPeriods(n) Returns selected range values of Simulated Series [NODE].base.LastNPeriods(n) Returns selected range values of Baseline Series [NODE].tgt.LastNPeriods(n) Returns selected range values of Comparison Series [NODE].TOTAL Returns the all period aggregated value of node [NODE].PTD Returns the period to date aggregated value of node [NODE].SEL Returns the simulation periods aggregated value of node [NODE].ID Returns node id [NODE].VISIBLE_CHILDREN Returns all visible children of a node [NODE].HIDDEN_CHILDREN Returns all hidden children of a node  "},{"title":"Other Operators","type":1,"pageTitle":"List of Formulas and Functions","url":"docs/resources/formula-list#other-operators","content":" OPERATORS DESCRIPTION () Parenthesis +, - plus,minus(-1) sign *, / Multiplication, Division +, - Addition, Subtraction ==, != Equal to, Not equal to &gt;, &gt;= Greater than, Greater than or equal to &lt;, &lt;= Less than, Less than or equal to  "}]